<?jelly escape-by-default='true' ?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
  xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
  xmlns:i="jelly:fmt" xmlns:p="/lib/hudson/project" xmlns:transitionWrapper="transitionWrapper">
    <d:taglib uri="transitionWrapper">
      <d:tag name="randomTableIdBlock">
          <j:choose>
              <j:when test="${divBasedFormLayout}">
                  <div id="tbl_ecp_${it.randomName}">
                      <d:invokeBody/>
                  </div>
              </j:when>
              <j:otherwise>
                  <table id="tbl_ecp_${it.randomName}">
                      <d:invokeBody/>
                  </table>
              </j:otherwise>
          </j:choose>
      </d:tag>
      <d:tag name="row">
          <j:choose>
              <j:when test="${divBasedFormLayout}">
                  <div id="ecp_${it.randomName}_${index}" class="tr" style="white-space:nowrap">
                      <d:invokeBody/>
                  </div>
              </j:when>
              <j:otherwise>
                  <tr id="ecp_${it.randomName}_${index}" style="white-space:nowrap">
                      <d:invokeBody/>
                  </tr>
              </j:otherwise>
          </j:choose>
      </d:tag>
      <d:tag name="td">
          <j:choose>
              <j:when test="${divBasedFormLayout}">
                  <div>
                      <d:invokeBody/>
                  </div>
              </j:when>
              <j:otherwise>
                  <td>
                      <d:invokeBody/>
                  </td>
              </j:otherwise>
          </j:choose>
      </d:tag>
  </d:taglib>
  <div id="ecp_${it.randomName}" style="float:left; overflow-y:auto; padding-right:25px" class="dynamic_checkbox">
    <j:set var="index" value="0"/>
    <transitionWrapper:randomTableIdBlock>
      <j:forEach var="iter" items="${it.getChoices()}" indexVar="indexVar">
        <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="isSelected" var="selected">
          <j:arg type="java.lang.Object" value="${iter.value}" />
        </j:invokeStatic>
        <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="escapeSelected" var="escapedValue">
          <j:arg type="java.lang.Object" value="${iter.value}" />
        </j:invokeStatic>
        <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="escapeSelected" var="escapedKey">
          <j:arg type="java.lang.Object" value="${iter.key}" />
        </j:invokeStatic>
        <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="isDisabled" var="disabled">
          <j:arg type="java.lang.Object" value="${iter.value}" />
        </j:invokeStatic>
        <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="escapeDisabled" var="escapedDisabledValue">
          <j:arg type="java.lang.Object" value="${iter.value}" />
        </j:invokeStatic>
        <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="escapeDisabled" var="escapedDisabledKey">
          <j:arg type="java.lang.Object" value="${iter.key}" />
        </j:invokeStatic>
        <j:set var="id" value="ecp_${it.randomName}_${index}" />
        <transitionWrapper:row>
          <transitionWrapper:td>
            <j:choose>
              <j:when test="${selected &amp;&amp; disabled}">
                <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="escapeDisabled" var="escapedAndDisabledValue">
                  <j:arg type="java.lang.Object" value="${escapedValue}" />
                </j:invokeStatic>
                <j:invokeStatic className="org.biouno.unochoice.util.Utils" method="escapeDisabled" var="escapedAndDisabledKey">
                  <j:arg type="java.lang.Object" value="${escapedKey}" />
                </j:invokeStatic>
                <input disabled="${disabled}" json="${escapedAndDisabledKey}" name="value" value="${escapedAndDisabledKey}" class=" " type="checkbox" title="${escapedAndDisabledValue}" alt="${escapedAndDisabledValue}" checked="true" />
                <label class="attach-previous" title="${escapedAndDisabledValue}">${escapedAndDisabledValue}</label>
              </j:when>
              <j:when test="${selected}">
                <input json="${escapedKey}" name="value" value="${escapedKey}" class=" " type="checkbox" title="${escapedValue}" alt="${escapedValue}" checked="true" />
                <label class="attach-previous" title="${escapedValue}">${escapedValue}</label>
              </j:when>
              <j:when test="${disabled}">
                <input disabled="${disabled}" json="${escapedDisabledKey}" name="value" value="${escapedDisabledKey}" class=" " type="checkbox" title="${escapedDisabledValue}" alt="${escapedDisabledValue}"  />
                <label class="attach-previous" title="${escapedDisabledValue}">${escapedDisabledValue}</label>
              </j:when>
              <j:otherwise>
                <input json="${escapedKey}" name="value" value="${escapedKey}" class=" " type="checkbox" title="${escapedValue}" alt="${escapedValue}"  />
                <label class="attach-previous" title="${escapedValue}">${escapedValue}</label>
              </j:otherwise>
            </j:choose>
          </transitionWrapper:td>
        </transitionWrapper:row>
        <j:set var="index" value="${index + 1}"/>
      </j:forEach>
    </transitionWrapper:randomTableIdBlock>
  </div>
<script type="text/javascript">
<![CDATA[
  (function() {
      var f = function() {
          var height = 0;
          var maxCount = ${index};
          if(maxCount > ${it.visibleItemCount}) {
              maxCount = ${it.visibleItemCount};
          }

          if(maxCount > 0 && document.getElementById("ecp_${it.randomName}_0").offsetHeight !=0) {
              for(var i=0; i< maxCount; i++) {
                  height += document.getElementById("${id}").offsetHeight + 3;
              }
          }
          else {
              height = maxCount * 25.5;
          }

          height = Math.floor(height);
          document.getElementById("ecp_${it.randomName}").style.height = height + "px";
      };

      f();
  })();
]]>
  </script>
</j:jelly>
